# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>
# Contributor: David Macek <david.macek.0@gmail.com>
# Contributor: Mateusz Miku≈Ça <mati865@gmail.com>
# Contributor: Alethea Rose <alethea@alethearose.com>

_realname=nodejs
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=10.7.0
pkgrel=1
pkgdesc="Evented I/O for V8 javascript (mingw-w64)"
arch=('any')
url="https://nodejs.org/"
license=("MIT")
makedepends=("${MINGW_PACKAGE_PREFIX}-python2" 'make')
depends=("${MINGW_PACKAGE_PREFIX}-c-ares"
         "${MINGW_PACKAGE_PREFIX}-http-parser"
         "${MINGW_PACKAGE_PREFIX}-icu"
         "${MINGW_PACKAGE_PREFIX}-libuv"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-nghttp2"
         "winpty")
optdepends=("${MINGW_PACKAGE_PREFIX}-npm: nodejs package manager")
options=('!emptydirs' '!strip') # 'debug')

source=("https://nodejs.org/dist/v${pkgver}/node-v${pkgver}.tar.xz"
        '0001-Fix-python-invocation-to-python2.patch'
        '0002-Fix-system-icu-build.patch'
        '0003-Include-win32-headers.h-in-v8-atomicops.h.patch'
        '0004-Define-localtime_s-for-MinGW.patch'
        '0005-Remove-.lib-suffix-on-linked-libraries.patch'
        '0006-Define-_WIN32_WINNT-in-node.gyp.patch'
        '0007-Skip-sys-resource-and-unneeded-includes-in-node.cc.patch'
        '0008-Link-with-municode-and-extern-wmain-for-Unicode.patch'
        '0009-Remove-no_rand_screen-from-s_client-invocation.patch'
        '0010-Fix-incorrect-test-assumptions-for-MinGW.patch'
        '0011-detect-architecture.patch'
        '0012-Use-shell-wrapper-script-for-npm-on-MSYS2-MinGW-w64.patch'
        '0013-Revert-to-FHS-installation-paths-on-Windows-tests-no.patch'
	'0014-Fix-linking-of-cctest-in-mingw-w64.patch'
	'0015-cctest-allow-building-with-municode.patch'
	'0016-format-macros.h-do-not-rely-on-__STDC_FORMAT_MACROS.patch'
	'0017-Do-not-get-confused-by-the-presence-of-winpthread.patch'
	'0018-Add-missing-include-to-build-condition-variable.cc-s.patch'
	'0019-Do-not-let-nghttp2-pretend-that-ssize_t-is-int.patch'
	'0020-inspector-use-namespaced-icu-symbols.patch'
	'0021-Use-wide-character-Win32-API-functions-to-handle-wch.patch'
	'0022-Disable-MSVC_HACK.patch'
	'0023-Make-sure-that-__rdtsc-is-declared.patch'
  '0024-Fix-thead-local-definition.patch'
  '0025-Fix-too-long-arguments-error-at-linking.patch'
  '0026-Fix-node-crypto-header-nonconformity.patch'
        'node')

prepare() {
  cd "${srcdir}/node-v${pkgver}"

  msg 'Fixing for python2 name'
  find -type f -exec sed \
    -e 's_^#!/usr/bin/env python$_&2_' \
    -e 's_^\(#!/usr/bin/python2\).[45]$_\1_' \
    -e 's_^#!/usr/bin/python$_&2_' \
    -e 's_^\( *exec \+\)python\( \+.*\)$_\1python2\2_'\
    -e 's_^\(.*\)python\( \+-c \+.*\)$_\1python2\2_'\
    -e "s_'python'_'python2'_" -i {} \;
  find test/ -type f -exec sed 's_python _python2 _' -i {} \;

  #patch -Np1 -i "${srcdir}/0001-Fix-python-invocation-to-python2.patch"
  patch -Np1 -i "${srcdir}/0002-Fix-system-icu-build.patch"
  patch -Np1 -i "${srcdir}/0003-Include-win32-headers.h-in-v8-atomicops.h.patch"
  patch -Np1 -i "${srcdir}/0004-Define-localtime_s-for-MinGW.patch"
  patch -Np1 -i "${srcdir}/0005-Remove-.lib-suffix-on-linked-libraries.patch"
  patch -Np1 -i "${srcdir}/0006-Define-_WIN32_WINNT-in-node.gyp.patch"
  patch -Np1 -i "${srcdir}/0007-Skip-sys-resource-and-unneeded-includes-in-node.cc.patch"
  patch -Np1 -i "${srcdir}/0008-Link-with-municode-and-extern-wmain-for-Unicode.patch"
  #patch -Np1 -i "${srcdir}/0009-Remove-no_rand_screen-from-s_client-invocation.patch"
  #patch -Np1 -i "${srcdir}/0010-Fix-incorrect-test-assumptions-for-MinGW.patch"
  patch -Np1 -i "${srcdir}/0011-detect-architecture.patch"
  #patch -Np1 -i "${srcdir}/0012-Use-shell-wrapper-script-for-npm-on-MSYS2-MinGW-w64.patch"
  #patch -Np1 -i "${srcdir}/0013-Revert-to-FHS-installation-paths-on-Windows-tests-no.patch"
  #patch -Np1 -i "${srcdir}/0014-Fix-linking-of-cctest-in-mingw-w64.patch"
  #patch -Np1 -i "${srcdir}/0015-cctest-allow-building-with-municode.patch"
  patch -Np1 -i "${srcdir}/0016-format-macros.h-do-not-rely-on-__STDC_FORMAT_MACROS.patch"
  patch -Np1 -i "${srcdir}/0017-Do-not-get-confused-by-the-presence-of-winpthread.patch"
  patch -Np1 -i "${srcdir}/0018-Add-missing-include-to-build-condition-variable.cc-s.patch"
  #patch -Np1 -i "${srcdir}/0019-Do-not-let-nghttp2-pretend-that-ssize_t-is-int.patch"
  #patch -Np1 -i "${srcdir}/0020-inspector-use-namespaced-icu-symbols.patch"
  patch -Np1 -i "${srcdir}/0021-Use-wide-character-Win32-API-functions-to-handle-wch.patch"
  patch -Np1 -i "${srcdir}/0022-Disable-MSVC_HACK.patch"
  patch -Np1 -i "${srcdir}/0023-Make-sure-that-__rdtsc-is-declared.patch"
  patch -Np1 -i "${srcdir}/0024-Fix-thead-local-definition.patch"
  patch -Np1 -i "${srcdir}/0025-Fix-too-long-arguments-error-at-linking.patch"
  patch -Np1 -i "${srcdir}/0026-Fix-node-crypto-header-nonconformity.patch"


  cd "${srcdir}"
  [[ -d ${CARCH} ]] && rm -rf ${CARCH}
  mv node-v${pkgver} ${CARCH}
}

build() {

  cd "${srcdir}/${CARCH}"

  local -a extra_config

  if check_option "debug" "y"; then
    extra_config+=( --debug )
  fi

  local opt_cpu="x64"
  if [ "${CARCH}" = "i686" ]; then
    opt_cpu="x86"
  fi

  ./configure \
    --prefix="${MINGW_PREFIX}" \
    --dest-os=win \
    --dest-cpu=${opt_cpu} \
    --shared-openssl \
    --shared-zlib \
    --shared-cares \
    --shared-libuv \
    --shared-http-parser \
    --shared-nghttp2 \
    --with-intl=system-icu \
    --without-perfctr \
    --without-etw \
    --without-snapshot \
    "${extra_config[@]}"

  ${MINGW_PREFIX}/bin/python2 tools/gyp_node.py -f make
  touch config.gypi
  # Work around the problem where the protocol files would be generated into a
  # subdirectory relative to deps/v8/src/inspector instead of relative to the
  # top-level directory.
  CXXFLAGS=-D_WIN32_WINNT=0x0600 make out/Release/obj/gen/src/inspector/protocol/Forward.h
  CXXFLAGS=-D_WIN32_WINNT=0x0600 make

  # flatten the nested node_modules/ hierarchy
  test -z "$(find deps/npm/node_modules | grep '^.\{140,\}$')" ||
  (cd deps/npm &&
   cp -R . ../npm.bup &&
   rm -rf node_modules &&
   ../../out/Release/node.exe ../npm.bup/bin/npm-cli.js install --production)
}

check() {
  cd "${srcdir}/${CARCH}"

  # A few tests still fail due to a bug with pausing/resuming file streams
  ${MINGW_PREFIX}/bin/python2 tools/test.py --mode=release -J \
    cctest doctool inspector message parallel sequential tick-processor || true
}

package() {
  cd "${srcdir}/${CARCH}"

  ${MINGW_PREFIX}/bin/python2 tools/install.py install "${pkgdir}" "/${MINGW_PREFIX}"

  install -d "${pkgdir}${MINGW_PREFIX}/share/doc/nodejs"
  cp -r doc/api/{*.html,assets} \
    "${pkgdir}${MINGW_PREFIX}/share/doc/nodejs"

  install -D -m644 LICENSE \
    "${pkgdir}${MINGW_PREFIX}/share/licenses/nodejs/LICENSE"

  mv -v "${pkgdir}$MINGW_PREFIX/bin/node"{.exe,_exe}
  install -m755 "${srcdir}/node" "${pkgdir}${MINGW_PREFIX}/bin/node"
  mv -v "${pkgdir}$MINGW_PREFIX/bin/node"{_exe,.exe}

  install -m755 "${srcdir}/${CARCH}/deps/npm/bin/npm.cmd" "${pkgdir}${MINGW_PREFIX}/bin/npm.cmd"
}

sha256sums=('34ee6946ca67151f35c23115818f0b78233c21b7dff210648d4d6dbb5a1be962'
            '50ae0cebb123b4617fb79961ae6f95fb2bb0da17d0dcf5daa89f54f3b8c8261d'
            '75ae29794d9888ee33e24a1e00e2718b05e6ef53e4d7ec62c4c500d6af4d3842'
            '7a0f96ba5b8639807a22c592d25e87bceae623d382c41bfc7f994367aa9b8ffb'
            '01ae46808586cfefc9e54a65043ac3a9995551bf1dbd9c536c62b7dc1b0c0e32'
            'c05e626d5250d27eb29b6243adbe8748ef3aaa9eccd256e9d5812d280b051170'
            'ca3d3829d5e7f2778854f1a14ab0c46e18398a979805093b419e66cc01b3d940'
            '4686913918da963bb67b06784db23d0e2c8c1432405b40f4878bf892b2178a03'
            'd7aa9894a342857f3146e52835a99371d3ae11e5c99b5014a94e8293010b2051'
            'a383724fd58925bda9fd9a149da79b8afdde4fd55a1298c7cdda297a2d3f5bab'
            '7966b11c2e413f74d00d5078ca065e3f14957750ae7741a0520f17f203097a2b'
            'b4ef6786d460b977fa0a8f34baebe0067c47de4f2fd188f1dcd69521e137e826'
            'b37fba2c8bb254905993b41d0ed319fa02bc37c88446ef0b2341ee92cc42faae'
            '89fde4ba2d92f007f3f27896f9253f6a3b7668595b7f68cae2756e6256a861ac'
            'd84636872a1f8d3692cf8748c8d9fb21d0314b23a0ec89b30065ddbd058176bb'
            '2005eb72281e1c727411015ced471b37999ccd062d60856cabd68032ed303601'
            'df9b6ff17292f68ce2c3b2ee2bd09d9c76b2f9a5991bfc86c6ba97582e96a3be'
            '3e5da564180238aeaf6e79b3273838465bed962fc65bbe8f0657e09ab0cabee3'
            '3a83695ebb617341b687133cd5319e0762c2f8af880800ac36de232311ccb903'
            '2d91635773140d50b2e2065898b89550fecf76ca984954e8bc53dc2ef2650714'
            'f7144d6fe1efee3d9134d92d3757c9bcc3f570dbca5a4fbadf3efd6492ba345f'
            'abadfcdfb558980fe5106e71d3345a80afe0fe9ff96fe840063836cde8f030a8'
            '44a8d757584cb725760c9d9bd661fb23ee0a2b555ffca8a449573e4d03db7dcc'
            'd8c7bc7240086a9e66c0fd6fca30c8288d09f2d9513f9ff9f8fed42179b9dbba'
            'c9d857b43f8e99d6a24fc0ebcc8d2478a048342405ace125be82f370edc5f2aa'
            '1ee144e9cb7a2cf1f774418e32f2a55c0f44fb0ce16ad44995119cd67e3cf456'
            '284251ff443506cd61530a026afb421d0084e4ad25c037bcfe3a045246d729a2')
