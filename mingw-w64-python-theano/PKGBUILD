# Maintainer: Peter Budai <peterbudai@hotmail.com>

_realname=theano
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python2-${_realname}" "${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
pkgver=1.0.3
pkgrel=1
pkgdesc="Theano is a Python library that allows you to define, optimize, and evaluate mathematical expressions involving multi-dimensional arrays efficiently (mingw-w64)"
arch=('any')
url='https://github.com/Theano/Theano/'
license=('BSD')
makedepends=("${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-python3"
             "${MINGW_PACKAGE_PREFIX}-python2-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python3-setuptools"
             "${MINGW_PACKAGE_PREFIX}-python2-numpy"
             "${MINGW_PACKAGE_PREFIX}-python3-numpy"
             "${MINGW_PACKAGE_PREFIX}-python2-scipy"
             "${MINGW_PACKAGE_PREFIX}-python3-scipy"
             "${MINGW_PACKAGE_PREFIX}-cython2"
             "${MINGW_PACKAGE_PREFIX}-cython"
             "${MINGW_PACKAGE_PREFIX}-openblas"
             )
source=("${_realname}-${pkgver}.tar.gz::https://github.com/Theano/${_realname}/archive/rel-${pkgver}.tar.gz"
        001-theano-mingw.patch)
sha256sums=('cc03c30b54d2043d2773046f6e044a81323c53201252e32b6e69314f27e0a955'
            '1fc0979d5c4f8dd9d3879a3bb7a142eb09d984b4d3e4015dc939a06433315e70')

noextract=("${_realname}-${pkgver}.tar.gz")

prepare() {
  # work around an issue with symbolic links in the tarball.
  bsdtar zxf ${_realname}-${pkgver}.tar.gz || true
  cp "${_realname^}-rel-${pkgver}"/doc/LICENSE.txt "${_realname^}-rel-${pkgver}"

  cd "${srcdir}/${_realname^}-rel-${pkgver}"
  patch -p1 -i ${srcdir}/001-theano-mingw.patch

  cd "${srcdir}"
  rm -rf python2-build-${CARCH} | true
  cp -r "${_realname^}-rel-${pkgver}" "python2-build-${CARCH}"

  rm -rf python3-build-${CARCH} | true
  cp -r "${_realname^}-rel-${pkgver}" "python3-build-${CARCH}"
}

build() {
  for pver in {2,3}; do
    msg "Python ${pver} build for ${CARCH}"
    cd "${srcdir}/python${pver}-build-${CARCH}"
    ${MINGW_PREFIX}/bin/python${pver} setup.py build
  done
}

check() {
  cd "${srcdir}/python3-build-${CARCH}"
  #${MINGW_PREFIX}/bin/python3 -m nose
}

package_python2-theano() {
  depends=("${MINGW_PACKAGE_PREFIX}-python2"
            "${MINGW_PACKAGE_PREFIX}-python2-numpy"
            "${MINGW_PACKAGE_PREFIX}-python2-scipy"
            "${MINGW_PACKAGE_PREFIX}-openblas"
            )

  cd "${srcdir}/python2-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python2 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

 # remove executables, as they are not working unfortunately
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/{*.exe,*.manifest}; do
    rm -f "$_f"
  done

  install -Dm644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python2-${_realname}/LICENSE.txt"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
  done

}

package_python3-theano() {
  depends=("${MINGW_PACKAGE_PREFIX}-python3"
            "${MINGW_PACKAGE_PREFIX}-python3-numpy"
            "${MINGW_PACKAGE_PREFIX}-python3-scipy"
            "${MINGW_PACKAGE_PREFIX}-openblas"
            )

  cd "${srcdir}/python3-build-${CARCH}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  ${MINGW_PREFIX}/bin/python3 setup.py install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 LICENSE.txt "${pkgdir}${MINGW_PREFIX}/share/licenses/python3-${_realname}/LICENSE.txt"

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  # fix python command in files and fix python2/python3 conflicts
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.py; do
    sed -e "s|/usr/bin/env |${MINGW_PREFIX}|g" \
        -e "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" -i ${_f}
    mv -v "$_f" "${_f%.py}3.py"
  done

  # remove executables, as they are not working unfortunately
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*.exe; do
    rm "$_f"
  done
}

package_mingw-w64-i686-python2-theano() {
  package_python2-theano
}

package_mingw-w64-i686-python3-theano() {
  package_python3-theano
}

package_mingw-w64-x86_64-python2-theano() {
  package_python2-theano
}

package_mingw-w64-x86_64-python3-theano() {
  package_python3-theano
}
